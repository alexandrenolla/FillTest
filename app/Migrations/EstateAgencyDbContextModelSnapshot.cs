// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.Services;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(EstateAgencyDbContext))]
    partial class EstateAgencyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("app.Models.RealState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("BedroomQuantity")
                        .HasColumnType("int");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("Price")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rua dos Tambaquis, 100, Jurerê Internacional, Florianópolis, Santa Catarina, Brasil",
                            BedroomQuantity = 6,
                            BusinessType = "Aluguel",
                            Neighborhood = "Jurerê Internacional",
                            Price = 30000m,
                            Title = "Mansão à beira mar de Jurerê Internacional"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Avenida Governador Irineu Bornhausen, 3600, Agronômica, Florianópolis, Santa Catarina, Brasil",
                            BedroomQuantity = 3,
                            BusinessType = "Venda",
                            Neighborhood = "Agronômica",
                            Price = 150000m,
                            Title = "Apartamento na Beira Mar de Florianópolis"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Rua dos Tambaquis, 100, Jurerê Internacional, Florianópolis, Santa Catarina, Brasil",
                            BedroomQuantity = 5,
                            BusinessType = "Venda",
                            Neighborhood = "Jurerê",
                            Price = 300000m,
                            Title = "Casa em Jurerê"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Avenida dos Buzios, 55, Jurerê Internacional, Florianópolis, Santa Catarina, Brasil",
                            BedroomQuantity = 5,
                            BusinessType = "Venda",
                            Neighborhood = "Jurerê",
                            Price = 3000000m,
                            Title = "Mansão"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Rua das Algas, 488, Jurerê Internacional, Florianópolis, Santa Catarina, Brasil",
                            BedroomQuantity = 3,
                            BusinessType = "Aluguel",
                            Neighborhood = "Jurerê",
                            Price = 300000m,
                            Title = "Casa"
                        });
                });

            modelBuilder.Entity("app.Models.RealStateImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageFileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RealStateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RealStateId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageFileName = "casa.jpeg",
                            RealStateId = 1
                        },
                        new
                        {
                            Id = 2,
                            ImageFileName = "casa2.jpeg",
                            RealStateId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageFileName = "casa3.jpeg",
                            RealStateId = 1
                        },
                        new
                        {
                            Id = 4,
                            ImageFileName = "casa4.jpeg",
                            RealStateId = 2
                        },
                        new
                        {
                            Id = 5,
                            ImageFileName = "casa5.jpeg",
                            RealStateId = 2
                        },
                        new
                        {
                            Id = 6,
                            ImageFileName = "casa6.jpeg",
                            RealStateId = 2
                        },
                        new
                        {
                            Id = 7,
                            ImageFileName = "casa7.jpeg",
                            RealStateId = 3
                        },
                        new
                        {
                            Id = 8,
                            ImageFileName = "casa8.jpeg",
                            RealStateId = 3
                        },
                        new
                        {
                            Id = 9,
                            ImageFileName = "casa9.jpeg",
                            RealStateId = 4
                        },
                        new
                        {
                            Id = 10,
                            ImageFileName = "casa10.jpeg",
                            RealStateId = 4
                        },
                        new
                        {
                            Id = 11,
                            ImageFileName = "casa11.jpeg",
                            RealStateId = 5
                        },
                        new
                        {
                            Id = 12,
                            ImageFileName = "casa12.jpeg",
                            RealStateId = 5
                        });
                });

            modelBuilder.Entity("app.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alexandrenolla@gmail.com",
                            Name = "Alexandre Nolla",
                            Password = "fullstack123",
                            Telephone = "48988050165"
                        });
                });

            modelBuilder.Entity("app.Models.RealStateImage", b =>
                {
                    b.HasOne("app.Models.RealState", "RealState")
                        .WithMany("RealStateImages")
                        .HasForeignKey("RealStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealState");
                });

            modelBuilder.Entity("app.Models.RealState", b =>
                {
                    b.Navigation("RealStateImages");
                });
#pragma warning restore 612, 618
        }
    }
}
